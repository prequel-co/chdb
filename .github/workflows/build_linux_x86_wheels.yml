name: Build Linux X86

on:
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Release Version Tag'
        required: true
  release:
    types: [created]
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'


jobs:
  build_wheels_linux:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ubuntu-24-4core
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        python-version: [ "3.8"]
    env:
      RUNNER_OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install clang++ for Ubuntu
        if: matrix.os == 'ubuntu-22.04'
        run: |
          pwd
          uname -a
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          which clang++-18
          clang++-18 --version
          sudo apt-get install -y make cmake ccache ninja-build yasm gawk wget
          ccache -s
      - name: Update git
        run: |
          sudo add-apt-repository ppa:git-core/ppa -y
          sudo apt-get update
          sudo apt-get install -y git
          git --version
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Update submodules
        run: |
          git submodule update --init --recursive --jobs 4
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}
          max-size: 5G
          append-timestamp: true
      - name: remove old clang and link clang-18 to clang
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo rm -f /usr/bin/clang || true
          sudo ln -s /usr/bin/clang-18 /usr/bin/clang
          sudo rm -f /usr/bin/clang++ || true
          sudo ln -s /usr/bin/clang++-18 /usr/bin/clang++
          which clang++
          clang++ --version
      - name: Disable static linking
        run: |
          sed -i 's/-DUSE_STATIC_LIBRARIES=1/-DUSE_STATIC_LIBRARIES=0/' chdb/build.sh
          sed -i 's/-DSPLIT_SHARED_LIBRARIES=0/-DSPLIT_SHARED_LIBRARIES=1/' chdb/build.sh
      - name: Run chdb/build.sh
        run: |
          python3 -m pip install pybind11 setuptools
          export CC=/usr/bin/clang
          export CXX=/usr/bin/clang++
          bash ./chdb/build.sh
        continue-on-error: false
      - name: Check ccache statistics
        run: |
          ccache -s
          ls -lh chdb
          df -h
      - name: Install patchelf from github
        run: |
          wget https://github.com/NixOS/patchelf/releases/download/0.18.0/patchelf-0.18.0-x86_64.tar.gz -O patchelf.tar.gz
          tar -xvf patchelf.tar.gz
          sudo cp bin/patchelf /usr/bin/
          sudo chmod +x /usr/bin/patchelf
          patchelf --version
        shell: bash
      - name: Packege libchdb.so
        if: matrix.python-version == '3.12'
        run: |
          cp programs/local/chdb.h chdb.h
          tar -czvf linux-x86_64-libchdb.tar.gz libchdb.so chdb.h
      - uses: actions/upload-artifact@v4
        with:
          name: chdb-artifacts-linux-x86_64-${{ matrix.python-version }}
          path: |
            ./linux-x86_64-libchdb.tar.gz
          overwrite: true
     
